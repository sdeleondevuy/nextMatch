generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Undefined
}

enum Department {
  Montevideo
  Artigas
  Canelones
  CerroLargo
  Colonia
  Durazno
  Flores
  Florida
  Lavalleja
  Maldonado
  Paysandu
  RioNegro
  Rivera
  Rocha
  Salto
  SanJose
  Soriano
  Tacuarembo
  TreintaYTres
}

model User {
  id           String     @id @default(uuid()) @db.Uuid
  name         String
  lastName     String
  username     String     @unique
  legalId      String     @unique
  email        String     @unique
  birthDate    DateTime
  age          Int
  gender       Gender     @default(Male)
  department   Department @default(Montevideo)
  password     String
  enabled      Boolean    @default(true)
  createdAt    DateTime   @default(now())
  
  // Relaciones
  userSports   UserSport[]
}

model Sport {
  id           String   @id @default(uuid()) @db.Uuid
  name         String   @unique
  enabled      Boolean  @default(true)
  createdAt    DateTime @default(now())
  
  // Relaciones
  userSports   UserSport[]
}

model UserSport {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  sportId   String   @db.Uuid
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  
  // Relaciones
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sport     Sport    @relation(fields: [sportId], references: [id], onDelete: Cascade)
  userPoints UserPoints?
  
  // Índice único para evitar duplicados
  @@unique([userId, sportId])
}

model UserPoints {
  id           String   @id @default(uuid()) @db.Uuid
  userSportId  String   @unique @db.Uuid
  initPoints   Int      // Puntos iniciales configurados por el usuario
  actualPoints Int      // Puntos actuales (inicialmente igual a initPoints)
  enabled      Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relaciones
  userSport    UserSport @relation(fields: [userSportId], references: [id], onDelete: Cascade)
}


